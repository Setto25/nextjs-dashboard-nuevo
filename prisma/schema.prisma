generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de DB de pruebas
model Note {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Nuevo modelo de Video  

model Video {
  id          Int      @id @default(autoincrement())
  tema        String   @default("general") // Valor por defecto...permite agregar columna a pesar de qu no existia
  titulo      String
  tipo        String   @default("YOUTUBE")
  url         String? // Para videos de YouTube  
  rutaLocal   String? // Para videos almacenados localmente  
  descripcion String?
  duracion    String?
  categorias  String?
  fechaSubida DateTime @default(now())
  miniatura   String?
  formato     String? // mp4, webm, etc.  
}

model Documento {
  id            Int      @id @default(autoincrement())
  tema          String   @default("general") // Valor por defecto...permite agregar columna a pesar de qu no existia
  titulo        String
  tipo          String?  @default("PDF")
  url           String? // Para documentos en linea 
  rutaLocal     String? // Para documentosalmacenados localmente  
  descripcion   String?
  categorias    String?
  fechaSubida   DateTime @default(now())
  formato       String? // doc, pdf, ppt, etc.  
  contenidoHTML String? //campo para almacenar contenido en HTML desde los docx
}

model User {
  id        Int       @id @default(autoincrement())
  rut       String    @unique // Nuevo campo RUT
  nombre    String
  apellido1 String
  apellido2 String
  email     String    @unique
  password  String
  role      String    @default("user")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime? // Borrado lógico (opcional)
}

model Protocolo {
  id            Int      @id @default(autoincrement())
  codigo        String   @unique // Asegura que el código sea único  
  titulo        String
  descripcion   String
  categoria     String
  version       String
  fechaCreacion DateTime
  fechaRevision DateTime
  vigencia      DateTime?
  creadoPor     String
  rutaLocal     String?
  fechaSubida   DateTime @default(now())
}

model ManualEquipo {
  id          Int      @id @default(autoincrement())
  titulo      String
  descripcion String?
  categorias String?
  fechaSubida DateTime @default(now())
  rutaLocal     String?
}

model Libro {
  id          Int      @id @default(autoincrement())
  titulo      String
  descripcion String?
  tema String?
  version     Int?
  anno        Int?
  categorias String?
  fechaSubida DateTime @default(now())
  rutaLocal     String?
}
